/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 blow.glb 
*/

import React, { useRef } from 'react'
import { useGLTF, PerspectiveCamera } from '@react-three/drei'
import { useFrame } from '@react-three/fiber';

export function Model(props) {
  const { nodes, materials } = useGLTF('/blow.glb')

  const ref = useRef();
  useFrame(() => {
    if (ref.current) {
      ref.current.rotation.y += 0.009;
    }
});


  return (
    <group {...props} dispose={null}>
      <pointLight castShadow intensity={1} decay={3} position={[0, 0.983, 0]} rotation={[-Math.PI / 2, 0, 0]} />
      <pointLight castShadow intensity={6} decay={2} position={[1.008, 0.983, -1.023]} rotation={[-Math.PI / 2, 0, 0]} />
      <pointLight intensity={5} decay={2} position={[0.972, 0.983, 1.117]} rotation={[-Math.PI / 2, 0, 0]} />
      <pointLight intensity={5} decay={2} position={[-1.003, 0.983, 1.117]} rotation={[-Math.PI / 2, 0, 0]} />
      <pointLight intensity={5} decay={2} position={[-1.003, 0.983, -1.013]} rotation={[-Math.PI / 2, 0, 0]} />
      <group position={[0, 0.261, 0]} scale={3.082} ref={ref}>
        <mesh castShadow geometry={nodes.Cube097.geometry} material={materials['Steel bowl outside.002']} />
        <mesh castShadow geometry={nodes.Cube097_1.geometry} material={materials['Steel bowl inside.002']} />
        <mesh castShadow geometry={nodes.Cube097_2.geometry} material={materials['Material.032']} />
        <mesh castShadow geometry={nodes.Cube097_3.geometry} material={materials['Orange.002']} />
      </group>
      <mesh receiveShadow geometry={nodes.Plane.geometry} material={nodes.Plane.material} scale={[2.304, 1.66, 1.66]} />
    </group>
  )
}

useGLTF.preload('/blow.glb')
